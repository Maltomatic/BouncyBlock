{"version":3,"sources":["assets\\scripts\\bird_map_init.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport class BirdBase extends cc.Component {\n\n    private base: number = 6;\n    private strip: number = 1;\n\n    onLoad () {\n        cc.director.getCollisionManager().enabled = true;\n        cc.director.getCollisionManager().enabledDrawBoundingBox = true;\n        cc.director.getPhysicsManager().enabled = true;\n        // cc.director.getPhysicsManager().debugDrawFlags = 1;\n        cc.director.getPhysicsManager().gravity = cc.v2(0, -600);\n    }\n    onDestroy () {\n        cc.director.getCollisionManager().enabled = false;\n        cc.director.getCollisionManager().enabledDebugDraw = false;\n        cc.director.getCollisionManager().enabledDrawBoundingBox = false;\n    }\n\n    start(){\n        this.node.anchorX = 0;\n        this.node.anchorY = 0;\n        var map = this.node.getComponent(cc.TiledMap);\n        this.strip = cc.find('Canvas/root').getComponent('root').color_strip;         //每次更新的section 色票都要一樣\n        this.base = 1 + 6*this.strip;\n\n        //console.log(\"base color gid: \" + this.base);\n\n        var body = this.node.addComponent(cc.RigidBody);\n        body.type = cc.RigidBodyType.Static;\n        body.fixedRotation = true;\n        var collider = this.node.addComponent(cc.PhysicsBoxCollider);\n        collider.offset = cc.v2(960, 240);\n        collider.size = cc.size(5, 1000);\n        collider.sensor = true;\n        collider.tag = 1000;        // init next map on contact\n        collider.apply();\n\n        var sz = map.getTileSize();\n        console.log(sz);\n\n        var floor = map.getLayer(\"ground\");\n        var layerSz = floor.getLayerSize();\n        if(this.node.name == \"bird0\"){\n            for(var i = 0; i < layerSz.width; i++){\n                for(var j = 0; j < layerSz.height; j++){\n                    var FloorTile = floor.getTiledTileAt(i, j, true);\n                    if(FloorTile.gid != 0){\n                        // console.log(\"draw ground box for tile (\" + i + \", \" + j + \")\");\n                        FloorTile.node.group = \"ground\";\n                        // console.log(\"created tile with \" + FloorTile.node.group)\n                        FloorTile.gid = this.base;\n                        var body = FloorTile.node.addComponent(cc.RigidBody);\n                        body.type = cc.RigidBodyType.Static;\n                        body.fixedRotation = true;\n                        var collider = FloorTile.node.addComponent(cc.PhysicsBoxCollider);\n                        collider.offset = cc.v2(sz.width/2, sz.height/2);\n                        collider.size = sz;\n                        collider.apply();\n                    }\n                }\n            }\n        }else{\n            for(var i = 0; i < layerSz.width; i++){\n                for(var j = 0; j < layerSz.height; j++){\n                    var FloorTile = floor.getTiledTileAt(i, j, true);\n                    FloorTile.gid = this.base;\n                }\n            }\n\n            console.log(\"tile init complete, digging path(s)\")\n            var pathrange = [2, 17];        // path should be range between j = 2 and j = 17\n\n            for(var i = 0; i < layerSz.width; i++){\n                // set gid to 0 for path\n                var range = Math.floor(Math.random() * 6);\n                var up_range_min = Math.max(2, pathrange[0]-range);\n                var down_range_min = Math.min(17, pathrange[1]+range);\n                range = Math.floor(Math.random() * 6);\n                var up_range_max = Math.min(pathrange[1]-range, pathrange[0]+range);\n                var down_range_max = Math.max(pathrange[0]+range, pathrange[1]-range);\n                \n\n                var down_bound = Math.floor(Math.random() * (down_range_max - down_range_min)) + down_range_min;\n                var up_bound =  Math.floor(Math.random() * (up_range_max - up_range_min)) + up_range_min;\n                if(down_bound - up_bound < 4){\n                    down_bound++;\n                    up_bound--;\n                }\n                \n                console.log(up_bound, down_bound);\n                for(var k = up_bound; k < down_bound; k++) floor.getTiledTileAt(i, k, true).gid = 0;\n                pathrange[0] = up_bound;\n                pathrange[1] = down_bound;\n            }\n\n            for(var i = 0; i < layerSz.width; i++){\n                for(var j = 0; j < layerSz.height; j++){\n                    var FloorTile = floor.getTiledTileAt(i, j, true);\n                    if(FloorTile.gid != 0){\n                        FloorTile.node.group = \"ground\";\n                        // console.log(\"created tile with \" + FloorTile.node.group)\n                        FloorTile.gid = this.base;\n                        var body = FloorTile.node.addComponent(cc.RigidBody);\n                        body.type = cc.RigidBodyType.Static;\n                        body.fixedRotation = true;\n                        var collider = FloorTile.node.addComponent(cc.PhysicsBoxCollider);\n                        collider.offset = cc.v2(sz.width/2, sz.height/2);\n                        collider.size = sz;\n                        collider.apply();\n                    }\n                }\n            }\n        }\n    }\n}\n"]}