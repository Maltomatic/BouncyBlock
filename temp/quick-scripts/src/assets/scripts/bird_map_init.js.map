{"version":3,"sources":["assets\\scripts\\bird_map_init.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class BirdBase extends cc.Component {\r\n\r\n    private base: number = 6;\r\n    private strip: number = 1;\r\n\r\n    onLoad () {\r\n        cc.director.getCollisionManager().enabled = true;\r\n        cc.director.getCollisionManager().enabledDrawBoundingBox = true;\r\n        cc.director.getPhysicsManager().enabled = true;\r\n        // cc.director.getPhysicsManager().debugDrawFlags = 1;\r\n        cc.director.getPhysicsManager().gravity = cc.v2(0, -500);\r\n    }\r\n    onDestroy () {\r\n        cc.director.getCollisionManager().enabled = false;\r\n        cc.director.getCollisionManager().enabledDebugDraw = false;\r\n        cc.director.getCollisionManager().enabledDrawBoundingBox = false;\r\n    }\r\n\r\n    start(){\r\n        this.node.anchorX = 0;\r\n        this.node.anchorY = 0;\r\n        var map = this.node.getComponent(cc.TiledMap);\r\n        this.strip = cc.find('Canvas/root').getComponent('root').color_strip;         //每次更新的section 色票都要一樣\r\n        this.base = 1 + 6*this.strip;\r\n\r\n        //console.log(\"base color gid: \" + this.base);\r\n\r\n        var body = this.node.addComponent(cc.RigidBody);\r\n        body.type = cc.RigidBodyType.Static;\r\n        body.fixedRotation = true;\r\n        var collider = this.node.addComponent(cc.PhysicsBoxCollider);\r\n        collider.offset = cc.v2(960, 240);\r\n        collider.size = cc.size(5, 1000);\r\n        collider.sensor = true;\r\n        collider.tag = 1000;        // init next map on contact\r\n        collider.apply();\r\n\r\n        var sz = map.getTileSize();\r\n        console.log(sz);\r\n\r\n        var floor = map.getLayer(\"ground\");\r\n        var layerSz = floor.getLayerSize();\r\n        if(this.node.name == \"bird0\"){\r\n            for(var i = 0; i < layerSz.width; i++){\r\n                for(var j = 0; j < layerSz.height; j++){\r\n                    var FloorTile = floor.getTiledTileAt(i, j, true);\r\n                    if(FloorTile.gid != 0){\r\n                        // console.log(\"draw ground box for tile (\" + i + \", \" + j + \")\");\r\n                        FloorTile.node.group = \"ground\";\r\n                        // console.log(\"created tile with \" + FloorTile.node.group)\r\n                        FloorTile.gid = this.base;\r\n                        var body = FloorTile.node.addComponent(cc.RigidBody);\r\n                        body.type = cc.RigidBodyType.Static;\r\n                        body.fixedRotation = true;\r\n                        var collider = FloorTile.node.addComponent(cc.PhysicsBoxCollider);\r\n                        collider.offset = cc.v2(sz.width/2, sz.height/2);\r\n                        collider.size = sz;\r\n                        collider.apply();\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            for(var i = 0; i < layerSz.width; i++){\r\n                for(var j = 0; j < layerSz.height; j++){\r\n                    var FloorTile = floor.getTiledTileAt(i, j, true);\r\n                    FloorTile.gid = this.base;\r\n                }\r\n            }\r\n\r\n            console.log(\"tile init complete, digging path(s)\")\r\n            var pathrange = [2, 17];        // path should be range between j = 2 and j = 17\r\n\r\n            for(var i = 1; i < layerSz.width-1; i++){\r\n                // set gid to 0 for path\r\n                var up_dir = ((pathrange[0] > 5)? Math.floor(Math.random()*3) : 1) -1;       // obstacles grow up, don't move, or down\r\n                var down_dir = ((pathrange[1] < 14)? Math.floor(Math.random()*3) : 1) -1;\r\n                var up_range = Math.floor(Math.random()*4);\r\n                var down_range = Math.floor(Math.random()*4);\r\n\r\n                var down_bound = pathrange[1] + down_dir*down_range;\r\n                var up_bound = Math.min((pathrange[0] + up_dir*up_range), down_bound-3);\r\n                if((pathrange[1] - up_bound) < 3){\r\n                    up_bound = pathrange[1]-3;\r\n                    down_bound = up_bound + 3;\r\n                }\r\n                for(var k = 0; k < up_bound; k++) floor.getTiledTileAt(i, k, true).gid = this.base;\r\n                for(var k = down_bound + 1; k < layerSz.height; k++) floor.getTiledTileAt(i, k, true).gid = this.base;\r\n                pathrange[0] = up_bound;\r\n                pathrange[1] = down_bound;\r\n            }\r\n            for(var i = 1; i < layerSz.width-1; i++){\r\n                for(var j = 0; j < layerSz.height; j++){\r\n                    var FloorTile = floor.getTiledTileAt(i, j, true);\r\n                    if(FloorTile.gid != 0){\r\n                        FloorTile.node.group = \"ground\";\r\n                        // console.log(\"created tile with \" + FloorTile.node.group)\r\n                        FloorTile.gid = this.base;\r\n                        var body = FloorTile.node.addComponent(cc.RigidBody);\r\n                        body.type = cc.RigidBodyType.Static;\r\n                        body.fixedRotation = true;\r\n                        var collider = FloorTile.node.addComponent(cc.PhysicsBoxCollider);\r\n                        collider.offset = cc.v2(sz.width/2, sz.height/2);\r\n                        collider.size = sz;\r\n                        collider.apply();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}