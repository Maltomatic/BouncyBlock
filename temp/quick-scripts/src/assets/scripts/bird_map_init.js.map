{"version":3,"sources":["assets\\scripts\\bird_map_init.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class BirdBase extends cc.Component {\r\n\r\n    private base: number = 6;\r\n    private strip: number = 1;\r\n\r\n    onLoad () {\r\n        cc.director.getCollisionManager().enabled = true;\r\n        cc.director.getCollisionManager().enabledDrawBoundingBox = true;\r\n        cc.director.getPhysicsManager().enabled = true;\r\n        // cc.director.getPhysicsManager().debugDrawFlags = 1;\r\n        cc.director.getPhysicsManager().gravity = cc.v2(0, -500);\r\n    }\r\n    onDestroy () {\r\n        cc.director.getCollisionManager().enabled = false;\r\n        cc.director.getCollisionManager().enabledDebugDraw = false;\r\n        cc.director.getCollisionManager().enabledDrawBoundingBox = false;\r\n    }\r\n\r\n    start(){\r\n        this.node.anchorX = 0;\r\n        this.node.anchorY = 0;\r\n        var map = this.node.getComponent(cc.TiledMap);\r\n        this.strip = cc.find('Canvas/root').getComponent('root').color_strip;         //每次更新的section 色票都要一樣\r\n        this.base = 1 + 6*this.strip;\r\n\r\n        //console.log(\"base color gid: \" + this.base);\r\n\r\n        var body = this.node.addComponent(cc.RigidBody);\r\n        body.type = cc.RigidBodyType.Static;\r\n        body.fixedRotation = true;\r\n        var collider = this.node.addComponent(cc.PhysicsBoxCollider);\r\n        collider.offset = cc.v2(960, 240);\r\n        collider.size = cc.size(5, 1000);\r\n        collider.sensor = true;\r\n        collider.tag = 1000;        // init next map on contact\r\n        collider.apply();\r\n\r\n        var sz = map.getTileSize();\r\n        console.log(sz);\r\n\r\n        var floor = map.getLayer(\"ground\");\r\n        var layerSz = floor.getLayerSize();\r\n        for(var i = 0; i < layerSz.width; i++){\r\n            for(var j = 0; j < layerSz.height; j++){\r\n                var FloorTile = floor.getTiledTileAt(i, j, true);\r\n                if(FloorTile.gid == 1){\r\n                    FloorTile.gid = this.base;\r\n                    // console.log(\"draw ground box for tile (\" + i + \", \" + j + \")\");\r\n                    FloorTile.node.group = \"ground\";\r\n                    // console.log(\"created tile with \" + FloorTile.node.group)\r\n                    var body = FloorTile.node.addComponent(cc.RigidBody);\r\n                    body.type = cc.RigidBodyType.Static;\r\n                    body.fixedRotation = true;\r\n                    var collider = FloorTile.node.addComponent(cc.PhysicsBoxCollider);\r\n                    collider.offset = cc.v2(sz.width/2, sz.height/2);\r\n                    collider.size = sz;\r\n                    collider.apply();\r\n                }\r\n            }\r\n        }\r\n        console.log(\"tile init complete, digging path(s)\")\r\n\r\n        for(var i = 1; i < layerSz.width-1; i++){\r\n            for(var j = 0; j < layerSz.height; j++){\r\n                var FloorTile = floor.getTiledTileAt(i, j, true);\r\n                if(floor.getTiledTileAt(i, j-1, true).gid != 0 /*and more generation conditions*/){\r\n                    FloorTile.node.group = \"ground\";\r\n                    FloorTile.gid = this.base;\r\n                    var body = FloorTile.node.addComponent(cc.RigidBody);\r\n                    body.type = cc.RigidBodyType.Static;\r\n                    body.fixedRotation = true;\r\n                    var collider = FloorTile.node.addComponent(cc.PhysicsBoxCollider);\r\n                    collider.offset = cc.v2(sz.width/2, sz.height/2);\r\n                    collider.size = sz;\r\n                    collider.apply();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}