{"version":3,"sources":["assets/scripts/section_init.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Player } from \"./player\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Section extends cc.Component {\n\n    private base: number = 6;\n    private strip: number = 1;\n\n    onLoad () {\n        cc.director.getCollisionManager().enabled = true;\n        cc.director.getCollisionManager().enabledDrawBoundingBox = true;\n        cc.director.getPhysicsManager().enabled = true;\n        // cc.director.getPhysicsManager().debugDrawFlags = 1;\n        cc.director.getPhysicsManager().gravity = cc.v2(0, -500);\n    }\n    onDestroy () {\n        cc.director.getCollisionManager().enabled = false;\n        cc.director.getCollisionManager().enabledDebugDraw = false;\n        cc.director.getCollisionManager().enabledDrawBoundingBox = false;\n    }\n\n    start(){\n        this.node.anchorX = 0;\n        this.node.anchorY = 0;\n        var map = this.node.getComponent(cc.TiledMap);\n        this.strip = cc.find('Canvas/root').getComponent('root').color_strip;         //每次更新的section 色票都要一樣\n        this.base = 1 + 6*this.strip;\n\n        //console.log(\"base color gid: \" + this.base);\n\n        var body = this.node.addComponent(cc.RigidBody);\n        body.type = cc.RigidBodyType.Static;\n        body.fixedRotation = true;\n        var collider = this.node.addComponent(cc.PhysicsBoxCollider);\n        collider.offset = cc.v2(960, 240);\n        collider.size = cc.size(5, 1000);\n        collider.sensor = true;\n        collider.tag = 1000;        // init next map on contact\n        collider.apply();\n\n        var sz = map.getTileSize();\n\n        var floor = map.getLayer(\"ground\");\n        var layerSz = floor.getLayerSize();\n        for(var i = 0; i < layerSz.width; i++){\n            for(var j = 0; j < layerSz.height; j++){\n                var FloorTile = floor.getTiledTileAt(i, j, true);\n                if(FloorTile.gid == 1){\n                    FloorTile.gid = this.base;\n                    // console.log(\"draw ground box for tile (\" + i + \", \" + j + \")\");\n                    FloorTile.node.group = \"ground\";\n                    console.log(\"created tile with \" + FloorTile.node.group)\n                    var body = FloorTile.node.addComponent(cc.RigidBody);\n                    body.type = cc.RigidBodyType.Static;\n                    body.fixedRotation = true;\n                    var collider = FloorTile.node.addComponent(cc.PhysicsBoxCollider);\n                    collider.offset = cc.v2(sz.width/2, sz.height/2);\n                    collider.size = sz;\n                    collider.apply();\n                }\n            }\n        }\n        console.log(\"tile init complete, marking mounds\")\n        for(var i = 1; i < layerSz.width-1; i++){\n            for(var j = 0; j < layerSz.height; j++){\n                var FloorTile = floor.getTiledTileAt(i, j, true);\n                if(FloorTile.gid != 0 && (floor.getTiledTileAt(i+1, j, true).gid == 0 || floor.getTiledTileAt(i-1, j, true).gid == 0)){\n                    FloorTile.node.group = \"mound\";\n                    console.log(\"marked mound at tile (\" + i + \", \" + j + \")\");\n                }\n            }\n        }\n\n        var obj_list = map.getObjectGroup(\"colors\").getObjects();\n        obj_list.forEach((obj) => {\n            var x_size = obj.width / 48;\n            var y_size = obj.height / 48;\n            var color = Math.floor(Math.random() * 5)\n            // console.log(obj.x, obj.y, x_size, y_size);\n            // console.log(\"Create colored block with gid \" + this.base + color);\n\n            for(i = obj.x / 48; i < (obj.x / 48 + x_size); i++){\n                for(j = 10 - (obj.y/48); j < (10 - (obj.y/48) + y_size); j++){\n                    var FloorTile = floor.getTiledTileAt(i, j, true);\n                    FloorTile.gid = this.base + color;\n\n                    var collider = FloorTile.node.getComponent(cc.PhysicsBoxCollider);\n                    collider.tag = 10;\n                }\n            }\n        });\n    }\n}\n"]}