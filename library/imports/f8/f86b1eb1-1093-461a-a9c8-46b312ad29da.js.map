{"version":3,"sources":["assets\\scripts\\section_init.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Player } from \"./player\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport class Section extends cc.Component {\r\n\r\n    private base: number = 6;\r\n    private strip: number = 1;\r\n    private player_col: number = 0;\r\n\r\n    @property(cc.Prefab)\r\n    searchlight: cc.Prefab = null;\r\n\r\n    private lv: number = 0;\r\n\r\n    onLoad () {\r\n        cc.director.getCollisionManager().enabled = true;\r\n        cc.director.getCollisionManager().enabledDrawBoundingBox = true;\r\n        cc.director.getPhysicsManager().enabled = true;\r\n        // cc.director.getPhysicsManager().debugDrawFlags = 1;\r\n        cc.director.getPhysicsManager().gravity = cc.v2(0, -500);\r\n        this.lv = parseInt(this.node.name.replace('section', ''));\r\n    }\r\n    onDestroy () {\r\n        cc.director.getCollisionManager().enabled = false;\r\n        cc.director.getCollisionManager().enabledDebugDraw = false;\r\n        cc.director.getCollisionManager().enabledDrawBoundingBox = false;\r\n    }\r\n\r\n    start(){\r\n        this.node.anchorX = 0;\r\n        this.node.anchorY = 0;\r\n        var map = this.node.getComponent(cc.TiledMap);\r\n        this.strip = cc.find('Canvas/root').getComponent('root').color_strip;         //每次更新的section 色票都要一樣\r\n        this.base = 1 + 6*this.strip;\r\n\r\n        //console.log(\"base color gid: \" + this.base);\r\n\r\n        var body = this.node.addComponent(cc.RigidBody);\r\n        body.type = cc.RigidBodyType.Static;\r\n        body.fixedRotation = true;\r\n        var collider = this.node.addComponent(cc.PhysicsBoxCollider);\r\n        collider.offset = cc.v2(960, 240);\r\n        collider.size = cc.size(5, 1000);\r\n        collider.sensor = true;\r\n        collider.tag = 1000;        // init next map on contact\r\n        collider.apply();\r\n\r\n        var sz = map.getTileSize();\r\n        // console.log(sz);\r\n\r\n        var floor = map.getLayer(\"ground\");\r\n        var layerSz = floor.getLayerSize();\r\n        for(var i = 0; i < layerSz.width; i++){\r\n            for(var j = 0; j < layerSz.height; j++){\r\n                var FloorTile = floor.getTiledTileAt(i, j, true);\r\n                if(FloorTile.gid == 1){\r\n                    FloorTile.gid = this.base;\r\n                    // console.log(\"draw ground box for tile (\" + i + \", \" + j + \")\");\r\n                    FloorTile.node.group = \"ground\";\r\n                    // console.log(\"created tile with \" + FloorTile.node.group)\r\n                    var body = FloorTile.node.addComponent(cc.RigidBody);\r\n                    body.type = cc.RigidBodyType.Static;\r\n                    body.fixedRotation = true;\r\n\r\n                    var collider = FloorTile.node.addComponent(cc.PhysicsBoxCollider);\r\n                    collider.offset = cc.v2(sz.width/2, sz.height/2);\r\n                    if(floor.getTiledTileAt(i, j-1, true).gid) collider.size = cc.size(47.8, 48);\r\n                    else collider.size = sz;\r\n                    collider.apply();\r\n                }\r\n            }\r\n        }\r\n        // console.log(\"tile init complete, marking mounds\")\r\n        // for(j = 3; j < layerSz.height; j++){\r\n        var FloorTile = floor.getTiledTileAt(layerSz.width-1, 7, true);\r\n        if(FloorTile.gid){\r\n            FloorTile.node.group = \"mound\";\r\n            var col = FloorTile.node.getComponent(cc.PhysicsBoxCollider);\r\n            col.size = cc.size(47.8, 48);\r\n            col.apply();\r\n            // console.log(\"shrink collider size of tile(\" + 39 + \", \" + 7 + \") to \"+ col.size.width + \", \"+ col.size.height);\r\n        }\r\n        // }\r\n        for(var i = 1; i < layerSz.width-1; i++){\r\n            for(var j = 0; j < layerSz.height; j++){\r\n                var FloorTile = floor.getTiledTileAt(i, j, true);\r\n                if(FloorTile.gid != 0 && ((floor.getTiledTileAt(i+1, j, true).gid == 0 && floor.getTiledTileAt(i+1, j+1, true).gid != 0) || (floor.getTiledTileAt(i-1, j, true).gid == 0 && floor.getTiledTileAt(i-1, j+1, true).gid != 0))){\r\n                    FloorTile.node.group = \"mound\";\r\n                    var col = FloorTile.node.getComponent(cc.PhysicsBoxCollider);\r\n                    col.size = cc.size(47.8, 48);\r\n                    col.apply();\r\n                    // console.log(\"shrink collider size of tile(\" + 39 + \", \" + 7 + \") to \"+ col.size.width + \", \"+ col.size.height);\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\"shrinking mound sizes to avoid sticking\");\r\n        // for(var i = 0; i < layerSz.width; i++){\r\n        //     for(var j = 0; j < layerSz.height; j++){\r\n        //         var FloorTile = floor.getTiledTileAt(i, j, true);\r\n        //         if(FloorTile.node.group == \"mound\"){\r\n        //             var collider = FloorTile.node.addComponent(cc.PhysicsBoxCollider);\r\n        //             collider.offset = cc.v2(sz.width/2, sz.height/2);\r\n        //             collider.size = cc.size(47.8, 48);\r\n        //             collider.apply();\r\n        //             console.log(\" collider size of mound(\" + i + \", \" + j + \") set to \"+ collider.size.width + \", \"+ collider.size.height);\r\n        //         }else if(FloorTile.node.group == \"ground\"){\r\n        //             var collider = FloorTile.node.addComponent(cc.PhysicsBoxCollider);\r\n        //             collider.offset = cc.v2(sz.width/2, sz.height/2);\r\n        //             collider.size = sz;\r\n        //             collider.apply();\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        var obj_list = map.getObjectGroup(\"colors\").getObjects();\r\n        this.player_col = 6*this.strip + cc.find('Canvas/root/player').getComponent('player').color\r\n        console.log(\"bias towards \" + this.player_col);\r\n        obj_list.forEach((obj) => {\r\n            var x_size = obj.width / 48;\r\n            var y_size = obj.height / 48;\r\n            \r\n            var cannot_hide = Math.floor(Math.random() * 3);\r\n            var col = 0;\r\n            if(cannot_hide) col = this.base + Math.floor(Math.random() * 5);\r\n            else col = this.player_col;\r\n            // console.log(obj.x, obj.y, x_size, y_size);\r\n            // console.log(\"Create colored block with gid \" + this.base + color);\r\n\r\n            for(i = obj.x / 48; i < (obj.x / 48 + x_size); i++){\r\n                for(j = 10 - (obj.y/48); j < (10 - (obj.y/48) + y_size); j++){\r\n                    var FloorTile = floor.getTiledTileAt(i, j, true);\r\n                    FloorTile.gid = col;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}